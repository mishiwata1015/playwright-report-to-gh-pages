name: Playwright Tests
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  test:
    name: Test
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 16
    - name: Install dependencies
      run: yarn
    - name: Install Playwright Browsers
      run: yarn playwright install --with-deps
    - name: Run Playwright tests
      run: yarn playwright test
    - uses: actions/upload-artifact@v3
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30

  publish_report:
    name: Publish Report
    # always() だとワークフローをキャンセルした場合も実行されてしまうので、明示的に指定する
    if: "success() || needs.test.result == 'failure'"
    needs: [test]
    runs-on: ubuntu-latest
    continue-on-error: true
    env:
      # ワークフロー実行ごとに一意となるパスを組み立てる
      HTML_REPORT_URL_PATH: reports/${{ github.ref_name }}/${{ github.run_id }}/${{ github.run_attempt }}
    steps:
      - name: Checkout GitHub Pages Branch
        uses: actions/checkout@v3
        with:
          ref: gh-pages
      - name: Set Git User
        # GitHub Actions botとしてレポート追加のコミットを作成する
        # See: https://github.com/orgs/community/discussions/26560
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
      - name: Download zipped HTML report
        uses: actions/download-artifact@v3
        with:
          name: playwright-report
          path: ${{ env.HTML_REPORT_URL_PATH }}
      - name: Push HTML Report
        timeout-minutes: 3
        # gh-pagesブランチにレポート追加のコミットをマージできるようになるまでrebase, pushを繰り返す
        # 同時にpushされた場合など、このジョブが同時に2回以上実行される場合でも全てのレポートをpushするために必要
        run: |
          git add .
          git commit -m "workflow: add HTML report for run-id ${{ github.run_id }} (attempt:  ${{ github.run_attempt }})"

          while true; do
            git pull --rebase
            if [ $? -ne 0 ]; then
              echo "Failed to rebase. Please review manually."
              exit 1
            fi

            git push
            if [ $? -eq 0 ]; then
              echo "Successfully pushed HTML report to repo."
              exit 0
            fi
          done
      - name: Output Report URL as Worfklow Annotation
        # レポートのGitHub PagesのURLを出力する
        run: |
          FULL_HTML_REPORT_URL=https://mishiwata1015.github.io/playwright-report-to-gh-pages/$HTML_REPORT_URL_PATH

          echo "::notice title=📋 Published Playwright Test Report::$FULL_HTML_REPORT_URL"
